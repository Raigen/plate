{"version":3,"file":"index.es.js","sources":["../src/findSelectedThreadNodeEntry.ts","../src/findThreadNodeEntries.ts","../src/createThreadPlugin.ts","../src/transforms/wrapThread.ts","../src/transforms/upsertThreadAtSelection.ts","../src/transforms/upsertThread.ts","../src/transforms/deleteThread.ts","../src/transforms/deleteThreadAtSelection.ts","../src/Thread.ts","../src/generateThreadLink.ts","../src/Contact.ts"],"sourcesContent":["import { getAbove, getPluginType, PlateEditor } from '@udecode/plate-core';\nimport { ELEMENT_THREAD } from './createThreadPlugin';\n\nexport function findSelectedThreadNodeEntry<T = {}>(editor: PlateEditor<T>) {\n  const type = getPluginType(editor, ELEMENT_THREAD);\n  return getAbove(editor, {\n    match: { type },\n  });\n}\n","import { getNodes, getPluginType, PlateEditor } from '@udecode/plate-core';\nimport { NodeEntry } from 'slate';\nimport { ELEMENT_THREAD } from './createThreadPlugin';\n\nexport function* findThreadNodeEntries<T = {}>(\n  editor: PlateEditor<T>\n): Generator<NodeEntry<any>, void, undefined> {\n  const type = getPluginType(editor, ELEMENT_THREAD);\n  yield* getNodes(editor, {\n    at: [],\n    match: { type },\n  });\n}\n","import { createPluginFactory } from '@udecode/plate-core';\nimport { Transforms } from 'slate';\nimport { findSelectedThreadNodeEntry } from './findSelectedThreadNodeEntry';\nimport { findThreadNodeEntries } from './findThreadNodeEntries';\nimport { ThreadNode, ThreadPlugin } from './types.js';\n\nexport const ELEMENT_THREAD = 'thread';\n\nexport const createThreadPlugin = createPluginFactory<ThreadPlugin>({\n  key: ELEMENT_THREAD,\n  isElement: true,\n  isInline: true,\n  handlers: {\n    onChange(editor) {\n      return () => {\n        const threadNodeEntries = findThreadNodeEntries(editor);\n        for (const threadNodeEntry of threadNodeEntries) {\n          Transforms.setNodes<ThreadNode>(\n            editor,\n            {\n              selected: false,\n            },\n            {\n              at: threadNodeEntry[1],\n            }\n          );\n        }\n\n        const threadNodeEntry = findSelectedThreadNodeEntry(editor);\n        if (threadNodeEntry) {\n          const { thread } = threadNodeEntry[0];\n          if (thread) {\n            Transforms.setNodes<ThreadNode>(\n              editor,\n              {\n                selected: true,\n              },\n              {\n                at: threadNodeEntry[1],\n              }\n            );\n          }\n        }\n      };\n    },\n  },\n});\n","import { getPluginType, PlateEditor, wrapNodes } from '@udecode/plate-core';\nimport { Location } from 'slate';\nimport { ELEMENT_THREAD } from '../createThreadPlugin';\nimport { Thread } from '../Thread';\n\nexport const wrapThread = <T = {}>(\n  editor: PlateEditor<T>,\n  { at, thread }: { thread: Thread; at?: Location }\n) => {\n  wrapNodes(\n    editor,\n    {\n      type: getPluginType(editor, ELEMENT_THREAD),\n      thread,\n      selected: false,\n      children: [],\n    },\n    { at, split: true }\n  );\n};\n","import {\n  getPluginType,\n  isCollapsed,\n  PlateEditor,\n  unwrapNodes,\n} from '@udecode/plate-core';\nimport { Editor, Transforms } from 'slate';\nimport { ELEMENT_THREAD } from '../createThreadPlugin';\nimport { findSelectedThreadNodeEntry } from '../findSelectedThreadNodeEntry';\nimport { Thread } from '../Thread';\nimport { wrapThread } from './wrapThread';\n\n/**\n * Unwrap link at a location (default: selection).\n * Then, the focus of the location is set to selection focus.\n * Then, wrap the link at the location.\n */\nexport const upsertThreadAtSelection = <T = {}>(\n  editor: PlateEditor<T>,\n  thread: Thread\n): any => {\n  if (editor.selection) {\n    const type = getPluginType(editor, ELEMENT_THREAD);\n\n    if (isCollapsed(editor.selection)) {\n      const threadLeaf = Editor.leaf(editor, editor.selection);\n      const [, inlinePath] = threadLeaf;\n      Transforms.select(editor, inlinePath);\n    }\n\n    const selectionLength =\n      editor.selection.focus.offset - editor.selection.anchor.offset;\n    unwrapNodes(editor, { at: editor.selection, match: { type } });\n    wrapThread(editor, { at: editor.selection, thread });\n    Transforms.select(editor, {\n      anchor: editor.selection.anchor,\n      focus: {\n        offset: selectionLength,\n        path: editor.selection.anchor.path,\n      },\n    });\n    return findSelectedThreadNodeEntry(editor);\n  }\n};\n","import { PlateEditor } from '@udecode/plate-core';\nimport { Thread } from '../Thread';\nimport { upsertThreadAtSelection } from './upsertThreadAtSelection';\n\nexport function upsertThread<T = {}>(\n  editor: PlateEditor<T>,\n  thread: Thread\n): any {\n  return upsertThreadAtSelection(editor, thread);\n}\n","import { getPluginType, PlateEditor, unwrapNodes } from '@udecode/plate-core';\nimport { Location } from 'slate';\nimport { ELEMENT_THREAD } from '../createThreadPlugin';\n\nexport function deleteThread<T = {}>(editor: PlateEditor<T>, thread: Location) {\n  unwrapNodes(editor, {\n    at: thread,\n    match: { type: getPluginType(editor, ELEMENT_THREAD) },\n  });\n}\n","import { getPluginType, PlateEditor, unwrapNodes } from '@udecode/plate-core';\nimport { ELEMENT_THREAD } from '../createThreadPlugin';\n\nexport function deleteThreadAtSelection<T = {}>(editor: PlateEditor<T>) {\n  unwrapNodes(editor, {\n    at: editor.selection!,\n    match: { type: getPluginType(editor, ELEMENT_THREAD) },\n  });\n}\n","import { Comment } from './Comment';\n\nexport interface Thread {\n  id: any;\n  comments: Comment[];\n  isResolved: boolean;\n}\n\nexport function isFirstComment(thread: Thread, comment: Comment): boolean {\n  return thread.comments.indexOf(comment) === 0;\n}\n","import { Thread } from './Thread.js';\n\nexport function generateThreadLink(thread: Thread) {\n  const url = new URL(window.location.href);\n  url.searchParams.set('thread', thread.id);\n  return url.toString();\n}\n","export interface Contact {\n  name: string;\n  email: string;\n  avatarUrl: string;\n}\n\nexport function doesContactMatchString(\n  matchString: string,\n  contact: Contact\n): boolean {\n  return (\n    contact.name.startsWith(matchString) ||\n    contact.email.startsWith(matchString)\n  );\n}\n"],"names":["findSelectedThreadNodeEntry","editor","type","getPluginType","ELEMENT_THREAD","getAbove","match","findThreadNodeEntries","getNodes","at","createThreadPlugin","createPluginFactory","key","isElement","isInline","handlers","onChange","threadNodeEntries","threadNodeEntry","Transforms","setNodes","selected","thread","wrapThread","wrapNodes","children","split","upsertThreadAtSelection","selection","isCollapsed","threadLeaf","Editor","leaf","inlinePath","select","selectionLength","focus","offset","anchor","unwrapNodes","path","upsertThread","deleteThread","deleteThreadAtSelection","isFirstComment","comment","comments","indexOf","generateThreadLink","url","URL","window","location","href","searchParams","set","id","toString","doesContactMatchString","matchString","contact","name","startsWith","email"],"mappings":"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"}